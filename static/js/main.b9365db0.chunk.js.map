{"version":3,"sources":["panels/category/components/delivery.tsx","store/actions.ts","panels/home/components/cart_line.tsx","img/mess.png","panels/category/components/product_grid.tsx","panels/hooks/use_get_products.ts","panels/hooks/use_cart.ts","panels/home/index.tsx","panels/category/index.tsx","panels/cart/components/cart_list_products.tsx","img/pay.png","panels/category/components/pay.tsx","panels/cart/index.tsx","panels/about_product/index.tsx","panels/city_list/index.tsx","panels/admin_orders/index.tsx","panels/admin_orders/use_get_orders.ts","panels/user_orders/index.tsx","App.tsx","store/reducer.ts","index.tsx"],"names":["DeliveryTypes","GET_CATEGORIES","SET_CATEGORY","SET_DELIVERY_CITY","SET_DELIVERY_INFO","SET_VK_PARAMS","setCategoriesList","categories","type","payload","CartLine","go","order","vertical","onClick","className","description","style","color","before","paddingRight","width","height","float","padding","indicator","meta","sum","level","weight","count","ProductProps","title","m","getStaticPrice","element","price","prices","items","find","p","quantity_from","discount_price","sale","discount_value_percents","Error","getElements","elements","length","after","map","item","properties","property_id","available","value","ProductsGrid","setActiveItem","useSelector","state","targetCat","targetCategory","useState","products","setProducts","fil","setFil","getFil","useMemo","filter","cat","parent_id","id","String","join","useEffect","get_items","a","fetch","response","json","res","changeFilter","arr","index","indexOf","splice","push","useGetProducts","marginTop","paddingTop","borderRadius","margin","backgroundColor","boxShadow","size","mode","minWidth","backgroundImage","image_url","undefined","backgroundSize","backgroundPosition","backgroundRepeat","stretched","detail","slice","textWrap","name","useCart","message","setMessage","JSON","parse","localStorage","getItem","setOrder","getMaxAvailable","e","el","active","quantity","changeElementVariant","updatedOrder","forEach","i","maxAvailable","key","activeElement","priceOfActiveElement","serialized","stringify","setItem","clearCart","onIncrementPosition","onDeletePosition","onDecrementPosition","console","log","addToCommunity","bridge","send","then","data","getImg","Home","fetchedUser","dispatch","useDispatch","header","textLevel","category","setTargetCategory","asideMode","subheader","background","src","mess","alt","fill","href","target","actions","Category","setActiveProduct","snackbar","setSnackbar","layout","onClose","left","icon","CartListProducts","getSort","getPrice","Fragment","display","Number","bottom","fontSize","fontWeight","onDismiss","Pay","typeDelivery","payRef","useRef","userName","setUserName","userAddress","setUserAddress","userPhone","setUserPhone","payLink","setPayLink","deliveryInfo","params","vkParams","dPrice","SDEK","Math","round","sdek","PR","dTerm","deliveryPeriodMin","deliveryPeriodMax","deliveryDateMax","orderSumWithDelivery","getElementInfo","pay","preventDefault","aboutItem","date","Date","now","jsonParams","or","info","amount","activePVZ","orderNum","contacts","address","phone","merchant","custom_order_id","toString","unix_timestamp","floor","salt","callback_url","orders_success","user","vk_user_id","num","method","cache","credentials","headers","redirect","referrer","body","payData","result","error","paylink","onChange","top","ref","rel","textAlign","payImg","Delivery","deliveryCity","setTypeDelivery","getRange","useCallback","cityCode","postal","catch","selected","POST_RUSSIA","Cart","goBack","access","setAccess","getAccess","group_id","expandable","align","action","AboutProduct","activeItem","marginBottom","CityList","arrCities","setArrCities","nameCity","setNameCity","loading","setLoading","setCity","city","setDeliveryCity","multiline","region","jsxArr","getItemVal","moment","locale","format","getInfo","AdminOrders","arrOrders","setArrOrders","referrerPolicy","changeStatus","_id","newItem","status","newArr","changeTrack","track","changeOrder","userId","useGetOrders","defaultValue","UserOrders","allOrders","setAllOrders","OrderList","Object","keys","App","activePanel","setActivePanel","popout","setPopout","history","setHistory","setUser","activeProduct","setVkParams","panelName","hist","pop","fetchData","getCat","window","onpopstate","initialState","store","createStore","linkParams","location","hash","replace","split","reduce","decodeURIComponent","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9365db0.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { Div, Tabs, TabsItem } from \"@vkontakte/vkui\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Order, ReduxState } from \"../../../types\";\nimport Pay from \"./pay\";\nimport { setDeliveryInfo } from \"../../../store/actions\";\n\nexport enum DeliveryTypes {\n  SDEK,\n  POST_RUSSIA,\n}\n\nconst Delivery: React.FC<{ order: Order; clearCart: () => void }> = ({\n  order,\n  clearCart,\n}) => {\n  const dispatch = useDispatch();\n  const deliveryCity = useSelector((state: ReduxState) => state.deliveryCity);\n  const [typeDelivery, setTypeDelivery] = useState<DeliveryTypes>(\n    DeliveryTypes.SDEK\n  );\n  const getRange = useCallback(() => {\n    if (!deliveryCity) return;\n    fetch(\"https://saharnypossum.herokuapp.com/items/getRange\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify({\n        cityCode: deliveryCity.id,\n        weight: String(order.meta.weight),\n        count: order.meta.count,\n        typeDelivery: \"137\", // \"137\" доставка до квартиры\n        postal: deliveryCity.postal,\n      }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        dispatch(setDeliveryInfo(res));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, [order.meta, deliveryCity, dispatch]);\n  useEffect(() => {\n    if (!deliveryCity) return;\n    getRange();\n  }, [typeDelivery, getRange, deliveryCity]);\n  if (!deliveryCity) return null;\n  return (\n    <Div>\n      <Tabs>\n        <TabsItem\n          onClick={() => setTypeDelivery(DeliveryTypes.SDEK)}\n          selected={typeDelivery === DeliveryTypes.SDEK}\n        >\n          СДЭК\n        </TabsItem>\n        <TabsItem\n          onClick={() => setTypeDelivery(DeliveryTypes.POST_RUSSIA)}\n          selected={typeDelivery === DeliveryTypes.POST_RUSSIA}\n        >\n          Почта России\n        </TabsItem>\n      </Tabs>\n      <Pay typeDelivery={typeDelivery} order={order} clearCart={clearCart}/>\n    </Div>\n  );\n};\nexport default Delivery;\n","import {Category, City, DeliveryInfo} from \"../types\";\n\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\nexport const SET_CATEGORY = \"SET_CATEGORY\";\nexport const SET_DELIVERY_CITY = \"SET_DELIVERY_CITY\"\nexport const SET_DELIVERY_INFO = \"SET_DELIVERY_INFO\"\nexport const SET_VK_PARAMS = \"SET_VK_PARAMS\"\nexport const setVkParams: (params: any) => void = (params) => {\n  return {\n    type: SET_VK_PARAMS,\n    payload: params,\n  };\n};\nexport const setDeliveryInfo: (info: DeliveryInfo) => void = (info) => {\n  return {\n    type: SET_DELIVERY_INFO,\n    payload: info,\n  };\n};\nexport const setDeliveryCity: (city: City) => void = (city) => {\n  return {\n    type: SET_DELIVERY_CITY,\n    payload: city,\n  };\n};\nexport const setCategoriesList: (categories: Category[]) => void = (\n  categories\n) => {\n  return {\n    type: GET_CATEGORIES,\n    payload: categories,\n  };\n};\nexport const setTargetCategory: (category: Category) => void = (category) => {\n  return {\n    type: SET_CATEGORY,\n    payload: category,\n  };\n};\n\nexport interface SetCarList {\n  type: typeof GET_CATEGORIES;\n  payload: Category[];\n}\n\nexport interface SetTargetCat {\n  type: typeof SET_CATEGORY;\n  payload: Category;\n}\n\nexport interface SetDelivCity {\n  type: typeof SET_DELIVERY_CITY;\n  payload: City;\n}\nexport interface SetDelivInfo {\n  type: typeof SET_DELIVERY_INFO;\n  payload: DeliveryInfo;\n}\nexport interface SetVkParams {\n  type: typeof SET_VK_PARAMS;\n  payload: any;\n}\n\nexport type Action = SetCarList | SetTargetCat | SetDelivCity | SetDelivInfo | SetVkParams","import { Caption, Cell, FixedLayout } from \"@vkontakte/vkui\";\r\nimport Icon20WorkOutline from \"@vkontakte/icons/dist/20/work_outline\";\r\nimport React from \"react\";\r\nimport Icon24MoneyCircle from \"@vkontakte/icons/dist/24/money_circle\";\r\nimport \"../../style.css\";\r\nimport {Order} from \"../../../types\";\r\n\r\ntype CartLineProps = {\r\n    go: (panel: string) => void,\r\n    order: Order\r\n}\r\n\r\nconst CartLine: React.FC<CartLineProps> = ({ go, order }) => {\r\n    return (\r\n        <FixedLayout vertical={\"top\"}>\r\n            <Cell\r\n                onClick={() => go(\"cart\")}\r\n                className=\"cellCart\"\r\n                description={\r\n                    <span style={{ color: \"#FFF\" }}>Информация о заказах</span>\r\n                }\r\n                before={\r\n                    <span style={{ paddingRight: 4, color: \"antiquewhite\" }}>\r\n            <Icon20WorkOutline\r\n                width={30}\r\n                height={30}\r\n                style={{ float: \"left\", padding: 2 }}\r\n            />\r\n          </span>\r\n                }\r\n                indicator={\r\n                    <span style={{ color: \"aliceblue\" }}>\r\n            <Icon24MoneyCircle\r\n                style={{ float: \"right\", padding: 2 }}\r\n                height={20}\r\n                width={20}\r\n            />\r\n                        {order.meta.sum}\r\n          </span>\r\n                }\r\n            >\r\n                <Caption style={{ color: \"antiquewhite\" }} level=\"1\" weight=\"regular\">\r\n                    Оформить заказ: товаров - {order.meta.count}\r\n                </Caption>\r\n            </Cell>\r\n        </FixedLayout>\r\n    );\r\n};\r\n\r\nexport default CartLine;\r\n","export default __webpack_public_path__ + \"static/media/mess.d4d0a58c.png\";","import React from \"react\";\nimport {\n  Button,\n  Caption,\n  Card,\n  CardGrid,\n  MiniInfoCell,\n  Spinner,\n  Title,\n} from \"@vkontakte/vkui\";\nimport { useGetProducts } from \"../../hooks/use_get_products\";\nimport { Product, ProductElement } from \"../../../types\";\nexport const ProductProps: { [key: number]: { title: string; m?: string } } = {\n  31: { title: \"Цвет\" },\n  35: { title: \"Вес\", m: \"гр\" },\n  42: { title: \"Вкус\" },\n  43: { title: \"Диаметр\", m: \"см\" },\n};\n\nexport const getStaticPrice: (element: ProductElement) => {\n  price: number;\n  sale: null | string;\n} = (element) => {\n  const price = element.prices.items?.find((p) => p.quantity_from === null);\n  if (price?.discount_price) {\n    return {\n      price: price.discount_price,\n      sale: `Скидка ${price.discount_value_percents}%`,\n    };\n  }\n  if (!price) throw Error(\"Ошибка получения цены\");\n  return { price: price.price, sale: null };\n};\n\nexport const getElements = (elements: ProductElement[] | null) => {\n  if (!elements) return null;\n  if (elements.length === 1) {\n    const price = getStaticPrice(elements[0]);\n    return (\n      <MiniInfoCell\n        after={`${price.price} руб ${price.sale ? price.sale : \"\"}`}\n        style={{ color: \"#FFF\" }}\n        before={null}\n      >\n        Цена\n      </MiniInfoCell>\n    );\n  }\n  return elements.map((item) => {\n    return item.properties?.map((p) => {\n      if (\n        !ProductProps[p.property_id] ||\n        item.item.available === \"N\" ||\n        !p.value\n      )\n        return null;\n      const price = getStaticPrice(item);\n      return (\n        <MiniInfoCell\n          before={ProductProps[p.property_id].title}\n          after={`${price.price} руб ${price.sale ? price.sale : \"\"}`}\n          style={{ color: \"#FFF\" }}\n        >\n          {p.value}\n        </MiniInfoCell>\n      );\n    });\n  });\n};\n\ntype ProductGridProps = {\n  setActiveItem: (item: Product) => void;\n  go: (panel: string) => void;\n};\n\nconst ProductsGrid: React.FC<ProductGridProps> = ({ setActiveItem, go }) => {\n  const { products, categories, targetCat } = useGetProducts();\n  if (!products || !categories || !targetCat) return <Spinner />;\n  return (\n    <>\n      {/*//Вырезаем фильтра*/}\n      {/*<HorizontalScroll>*/}\n      {/*    <Tabs>*/}\n      {/*        {categories.map((cat) => {*/}\n      {/*            if (cat.parent_id === targetCat.id)*/}\n      {/*                return (*/}\n      {/*                    <TabsItem*/}\n      {/*                        key={cat.id}*/}\n      {/*                        selected={fil.includes(cat.id)}*/}\n      {/*                        onClick={() => changeFilter(cat.id)}*/}\n      {/*                    >*/}\n      {/*                        {cat.name}*/}\n      {/*                    </TabsItem>*/}\n      {/*                );*/}\n      {/*            if (cat.id === targetCat.id)*/}\n      {/*                return (*/}\n      {/*                    <TabsItem*/}\n      {/*                        key={targetCat.id}*/}\n      {/*                        selected={fil.includes(cat.id)}*/}\n      {/*                        onClick={() => changeFilter(cat.id)}*/}\n      {/*                    >*/}\n      {/*                        {cat.name}*/}\n      {/*                    </TabsItem>*/}\n      {/*                );*/}\n      {/*            return null;*/}\n      {/*        })}*/}\n      {/*    </Tabs>*/}\n      {/*</HorizontalScroll>*/}\n      <CardGrid style={{ marginTop: 10 }}>\n        {products.map((item) => {\n          if (item.elements && !item.elements[0].prices.items) {\n            return null;\n          }\n          return (\n            <Card\n              key={item.id}\n              style={{\n                paddingTop: 8,\n                borderRadius: 13,\n                margin: \"0 0 20px 0\",\n                backgroundColor: \"#007151\",\n                boxShadow:\n                  \"inset 2px 2px 5px rgb(226 191 157 / 50%), 1px 1px 5px rgb(255 255 255)\",\n              }}\n              size=\"l\"\n              mode=\"shadow\"\n            >\n              <div className=\"flex\">\n                <div>\n                  <div\n                    onClick={() => {\n                      setActiveItem(item);\n                      go(\"aboutProduct\");\n                    }}\n                    style={{\n                      height: 100,\n                      minWidth: 100,\n                      margin: \"10px 25px\",\n                      backgroundImage: item.image_url\n                        ? \"url(\" + item.image_url + \")\"\n                        : undefined,\n                      backgroundSize: \"contain\",\n                      backgroundPosition: \"center 35%\",\n                      backgroundRepeat: \"no-repeat\",\n                      borderRadius: 13,\n                    }}\n                  />\n                  <div style={{ padding: \"0 10px\" }}>\n                    <Button\n                      onClick={() => {\n                        setActiveItem(item);\n                        go(\"aboutProduct\");\n                      }}\n                      size=\"m\"\n                      stretched\n                      mode=\"overlay_secondary\"\n                    >\n                      Подробнее\n                    </Button>\n                  </div>\n                </div>\n                <div style={{ margin: \"10px 10px 0 0\" }}>\n                  <Caption level=\"1\" weight=\"regular\">\n                    {item.detail.slice(0, 180)}\n                  </Caption>\n                </div>\n              </div>\n              <MiniInfoCell textWrap=\"full\" before={null}>\n                <Title level=\"1\" weight=\"regular\">\n                  {item.name}\n                </Title>\n              </MiniInfoCell>\n              {getElements(item.elements)}\n            </Card>\n          );\n        })}\n      </CardGrid>\n    </>\n  );\n};\nexport default ProductsGrid;\n","import { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {Category, Product, ReduxState} from \"../../types\";\r\n\r\ntype UseGetProdProps = {\r\n    products: Product[] | null,\r\n    targetCat: Category | null,\r\n    categories: Category[] | null,\r\n    changeFilter: (id: number) => void,\r\n    fil: number[],\r\n}\r\nconst useGetProducts: () => UseGetProdProps = () => {\r\n    const categories = useSelector((state: ReduxState) => state.categories);\r\n    const targetCat = useSelector((state: ReduxState) => state.targetCategory);\r\n    const [products, setProducts] = useState<Product[] | null>(null);\r\n    const [fil, setFil] = useState<number[]>([]);\r\n\r\n    const getFil = useMemo(() => {\r\n        if (!targetCat) return;\r\n        if (fil.length === 0)\r\n            return (\r\n                categories?.filter((cat) => cat.parent_id === targetCat.id)\r\n                    .map((item) => String(item.id))\r\n                    .join(\",\") +\r\n                \",\" +\r\n                targetCat.id\r\n            );\r\n        return fil.join(\",\");\r\n    }, [fil, targetCat, categories]);\r\n\r\n    useEffect(() => {\r\n        const get_items = async () => {\r\n            const response = await fetch(\r\n                \"https://zoomagasin.ru/api/api.php?route=list&section_ids=\" + getFil\r\n            );\r\n            const res: {items: Product[] | null} | null = await response.json();\r\n            if (!res || !res.items) return;\r\n            if (typeof res !== \"undefined\") {\r\n                //фильруем только доступные\r\n                setProducts(res.items.filter(item=>item.available === \"Y\"));\r\n            }\r\n        };\r\n        get_items();\r\n    }, [fil, getFil]);\r\n\r\n    const changeFilter = (id: number) => {\r\n        let arr = [...fil];\r\n        const index = arr.indexOf(id);\r\n        if (index > -1) {\r\n            arr.splice(index, 1);\r\n        } else {\r\n            arr.push(id);\r\n        }\r\n        setFil(arr);\r\n    };\r\n\r\n    return {\r\n        products,\r\n        targetCat,\r\n        categories,\r\n        changeFilter,\r\n        fil,\r\n    };\r\n};\r\nexport { useGetProducts };\r\n","import { useMemo, useState } from \"react\";\nimport { getStaticPrice } from \"../category/components/product_grid\";\nimport { Order, OrderProductItem, Product } from \"../../types\";\n\ntype UseCartProps = {\n  order: Order;\n  clearCart: () => void;\n  message: string | null;\n  onIncrementPosition: (item: OrderProductItem) => void;\n  onDeletePosition: (item: OrderProductItem) => void;\n  changeElementVariant: (item: Product, index: number) => void;\n  onDecrementPosition: (item: OrderProductItem) => void;\n};\nconst useCart: () => UseCartProps = () => {\n  const [message, setMessage] = useState<string | null>(null);\n  const [order, setOrder] = useState<Order>(\n    JSON.parse(localStorage.getItem(\"new_possum_orders\") || \"null\") || {\n      items: {},\n      meta: { sum: 0, count: 0, weight: 0 },\n    }\n  );\n  const getMaxAvailable: (item: OrderProductItem) => number = (item) => {\n    const e = item.elements?.find((el) => el.active);\n    if (!e || e.item === null) {\n      return item.quantity;\n    }\n    return e.item.quantity;\n  };\n  const onIncrementPosition: (item: OrderProductItem) => void = (item) => {\n    try {\n      const updatedOrder = { ...order };\n      if (item.id in updatedOrder.items) {\n        const maxAvailable = getMaxAvailable(item);\n        if (updatedOrder.items[item.id].count >= maxAvailable) {\n          throw Error(\n            `Нельзя заказать больше ${maxAvailable} штук(и) данного товара`\n          );\n        }\n        updatedOrder.items[item.id].count++;\n      } else {\n        let i = 0;\n        //если новый проставляем активности на варианты\n        item.elements.forEach((el) => {\n          if (\n            (el.item === null || (el.item && el.item.available === \"Y\")) &&\n            i === 0\n          ) {\n            el.active = true;\n            i++;\n            return;\n          }\n          el.active = false;\n        });\n        //определяем границу доступных в этой цене\n        const maxAvailable = getMaxAvailable(item);\n        if (maxAvailable < 1) {\n          throw Error(`Сейчас данный товар недоступен к покупке`);\n        }\n        updatedOrder.items[item.id] = {\n          item: item,\n          count: 1,\n        };\n      }\n      let count = 0;\n      let sum = 0;\n      let weight = 0;\n      for (let key in updatedOrder.items) {\n        count = count + updatedOrder.items[key].count;\n        const activeElement = updatedOrder.items[key].item.elements.find(\n          (el) => el.active\n        );\n        if (!activeElement) {\n          throw Error(\"Не найдет выбранный вариант товара\");\n          return;\n        }\n        const priceOfActiveElement = getStaticPrice(activeElement);\n        sum = sum + updatedOrder.items[key].count * priceOfActiveElement.price;\n        weight = weight + updatedOrder.items[item.id].count * 0.7;\n      }\n      updatedOrder.meta = { count: count, sum: sum, weight: weight };\n      const serialized = JSON.stringify(updatedOrder);\n      localStorage.setItem(\"new_possum_orders\", serialized);\n      setOrder(updatedOrder);\n    } catch (e) {\n      setMessage(e as string);\n    }\n  };\n  const onDeletePosition: (item: OrderProductItem) => void = (item) => {\n    const updatedOrder = { ...order };\n    delete updatedOrder.items[item.id];\n    let count = 0;\n    let sum = 0;\n    let weight = 0;\n    for (let key in updatedOrder.items) {\n      count = count + updatedOrder.items[key].count;\n      const activeElement = updatedOrder.items[key].item.elements.find(\n        (el) => el.active\n      );\n      if (!activeElement) {\n        throw Error(\"Не найдет выбранный вариант товара\");\n        return;\n      }\n      const priceOfActiveElement = getStaticPrice(activeElement);\n      sum = sum + updatedOrder.items[key].count * priceOfActiveElement.price;\n      weight = weight + updatedOrder.items[key].count * 0.7;\n    }\n    updatedOrder.meta = { count: count, sum: sum, weight: weight };\n\n    const serialized = JSON.stringify(updatedOrder);\n    localStorage.setItem(\"new_possum_orders\", serialized);\n    setOrder(updatedOrder);\n  };\n  const changeElementVariant = async (item: Product, index: number) => {\n    const updatedOrder = { ...order };\n    await updatedOrder.items[item.id].item.elements.forEach((el, i) => {\n      el.active = i === index;\n    });\n    const maxAvailable = getMaxAvailable(item);\n    if (updatedOrder.items[item.id].count > maxAvailable) {\n      updatedOrder.items[item.id].count = maxAvailable;\n    }\n    let count = 0;\n    let sum = 0;\n    let weight = 0;\n    for (let key in updatedOrder.items) {\n      count = count + updatedOrder.items[key].count;\n      const activeElement = updatedOrder.items[key].item.elements.find(\n        (el) => el.active\n      );\n      if (!activeElement) {\n        throw Error(\"Не найдет выбранный вариант товара\");\n        return;\n      }\n      const priceOfActiveElement = getStaticPrice(activeElement);\n      sum = sum + updatedOrder.items[key].count * priceOfActiveElement.price;\n      weight = weight + updatedOrder.items[key].count * 0.7;\n    }\n    updatedOrder.meta = { count: count, sum: sum, weight: weight };\n    const serialized = JSON.stringify(updatedOrder);\n    localStorage.setItem(\"new_possum_orders\", serialized);\n    setOrder(updatedOrder);\n  };\n  const onDecrementPosition = (item: OrderProductItem) => {\n    console.log(\"onDecrementPosition\");\n    const updatedOrder = { ...order };\n    if (item.id in updatedOrder.items) {\n      if (updatedOrder.items[item.id].count === 1) {\n        delete updatedOrder.items[item.id];\n      } else {\n        updatedOrder.items[item.id].count--;\n      }\n    }\n    let count = 0;\n    let sum = 0;\n    let weight = 0;\n    for (let key in updatedOrder.items) {\n      count = count + updatedOrder.items[key].count;\n      const activeElement = updatedOrder.items[key].item.elements.find(\n        (el) => el.active\n      );\n      if (!activeElement) {\n        throw Error(\"Не найдет выбранный вариант товара\");\n        return;\n      }\n      const priceOfActiveElement = getStaticPrice(activeElement);\n      sum = sum + updatedOrder.items[key].count * priceOfActiveElement.price;\n      weight = weight + updatedOrder.items[key].count * 0.7;\n    }\n    updatedOrder.meta = { count: count, sum: sum, weight: weight };\n    const serialized = JSON.stringify(updatedOrder);\n    localStorage.setItem(\"new_possum_orders\", serialized);\n    setOrder(updatedOrder);\n  };\n  const clearCart: () => void = () => {\n    localStorage.setItem(\n      \"new_possum_orders\",\n      JSON.stringify({ items: {}, meta: { sum: 0, weight: 0, count: 0 } })\n    );\n    const updatedOrder = { items: {}, meta: { sum: 0, weight: 0, count: 0 } };\n    setOrder(updatedOrder);\n  };\n  return {\n    order: useMemo(() => order, [order]),\n    clearCart,\n    message,\n    onIncrementPosition,\n    onDeletePosition,\n    changeElementVariant,\n    onDecrementPosition,\n  };\n};\nexport { useCart };\n","import React from \"react\";\r\nimport bridge, {UserInfo} from \"@vkontakte/vk-bridge\";\r\nimport {\r\n    Header,\r\n    Link,\r\n    Banner,\r\n    Panel,\r\n    PanelHeader,\r\n    Group,\r\n    Div,\r\n    MiniInfoCell,\r\n    Footer,\r\n    Button,\r\n} from \"@vkontakte/vkui\";\r\nimport \"../style.css\";\r\nimport CartLine from \"./components/cart_line\";\r\nimport Icon16Chevron from \"@vkontakte/icons/dist/16/chevron\";\r\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\r\nimport Icon24LogoVk from \"@vkontakte/icons/dist/24/logo_vk\";\r\nimport Icon24Linked from \"@vkontakte/icons/dist/24/linked\";\r\nimport mess from \"../../img/mess.png\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setTargetCategory } from \"../../store/actions\";\r\nimport {ReduxState} from \"../../types\";\r\nimport {useCart} from \"../hooks/use_cart\";\r\nconst addToCommunity = async () => {\r\n    await bridge\r\n        .send(\"VKWebAppAddToCommunity\", {})\r\n        .then((data) => console.log(data));\r\n};\r\n\r\nexport const getImg = (id: number) => {\r\n    switch (id) {\r\n        case 1:\r\n            return \"https://zoomagasin.ru/images/im-ej-logo.png\";\r\n        case 19:\r\n            return \"https://zoomagasin.ru/images/im-possum-logo.png\";\r\n        case 23:\r\n            return \"https://zoomagasin.ru/images/im-rept-logo.png\";\r\n        case 27:\r\n            return \"https://zoomagasin.ru/images/im-nasek-logo.png\";\r\n        default:\r\n            return \"https://zoomagasin.ru/images/im-drug-logo.png\";\r\n    }\r\n};\r\ntype HomeProps = {\r\n    id: string,\r\n    go: (panel: string) => void,\r\n    fetchedUser: UserInfo | null,\r\n}\r\n\r\nconst Home:React.FC<HomeProps>= ({ id, go, fetchedUser }) => {\r\n    const {order} = useCart()\r\n    const dispatch = useDispatch();\r\n    const categories = useSelector((state: ReduxState) => state.categories);\r\n    if (!categories) return null;\r\n    return (\r\n        <Panel id={id}>\r\n            <PanelHeader />\r\n            <CartLine go={go} order={order}/>\r\n            <Group\r\n                style={{ paddingTop: 50 }}\r\n                header={<Header mode=\"secondary\">Почему мы?</Header>}\r\n            >\r\n                <Div>\r\n                    <MiniInfoCell before={<Icon16Chevron />}>\r\n                        У нас работают специалисты\r\n                    </MiniInfoCell>\r\n                    <MiniInfoCell textLevel={\"primary\"} before={<Icon16Chevron />}>\r\n                        Более 5 лет успешной работы\r\n                    </MiniInfoCell>\r\n                    <MiniInfoCell textLevel={\"primary\"} before={<Icon16Chevron />}>\r\n                        Более 1 000 покупателей\r\n                    </MiniInfoCell>\r\n                    <MiniInfoCell textLevel={\"primary\"} before={<Icon16Chevron />}>\r\n                        Входим в ассоциации врачей\r\n                    </MiniInfoCell>\r\n                    <MiniInfoCell textLevel={\"primary\"} before={<Icon16Chevron />}>\r\n                        Собственное производство\r\n                    </MiniInfoCell>\r\n                    <MiniInfoCell textLevel={\"primary\"} before={<Icon16Chevron />}>\r\n                        Контроль качеств\r\n                    </MiniInfoCell>\r\n                </Div>\r\n            </Group>\r\n            <Group header={<Header mode=\"secondary\">Категории товаров</Header>}>\r\n                {categories.map(\r\n                    (cat) =>\r\n                        cat.parent_id === null && (\r\n                            <Banner\r\n                                key={cat.id}\r\n                                id={String(cat.id)}\r\n                                onClick={() => {\r\n                                    dispatch(setTargetCategory(cat));\r\n                                    go(\"category\");\r\n                                }}\r\n                                mode=\"image\"\r\n                                header={cat.name}\r\n                                asideMode={\"expand\"}\r\n                                subheader={cat.description}\r\n                                background={\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundColor: \"#198662\",\r\n                                            backgroundImage: \"url(\" + getImg(cat.id) + \")\",\r\n                                            backgroundPosition: \"98% 95%\",\r\n                                            backgroundSize: 50,\r\n                                            backgroundRepeat: \"no-repeat\",\r\n                                        }}\r\n                                    />\r\n                                }\r\n                            />\r\n                        )\r\n                )}\r\n            </Group>\r\n            <Group header={<Header mode=\"secondary\">Есть вопросы?</Header>}>\r\n                <MiniInfoCell\r\n                    after={<img width={40} height={22} src={mess} alt=\"Viber/WhatsApp\" />}\r\n                    before={<Icon24Phone fill={\"#FFF\"} height={20} width={20} />}\r\n                >\r\n                    <Link href=\"tel:+79022954808\" target=\"_blank\">\r\n                        +7 (902) 294-48-08\r\n                    </Link>\r\n                </MiniInfoCell>\r\n                <MiniInfoCell\r\n                    before={<Icon24LogoVk fill={\"#FFF\"} height={20} width={20} />}\r\n                >\r\n                    <Link href=\"https://vk.com/zoomagasin\" target=\"_blank\">\r\n                        vk.com/zoomagasin\r\n                    </Link>\r\n                </MiniInfoCell>\r\n                <MiniInfoCell\r\n                    before={<Icon24Linked fill={\"#FFF\"} height={20} width={20} />}\r\n                >\r\n                    <Link href=\"https://zoomagasin.ru/\" target=\"_blank\">\r\n                        zoomagasin.ru\r\n                    </Link>\r\n                </MiniInfoCell>\r\n                <Banner\r\n                    header=\"Установите в Ваше сообщество\"\r\n                    subheader=\"Если Вы являетесь владельцем сообщества с тематикой, схожей с тематикой нашего магазина - добавьте 'Сахарный поссум' в приложения Вашего сообщества или группы.\"\r\n                    actions={\r\n                        <Button onClick={addToCommunity}>Установить в сообщество</Button>\r\n                    }\r\n                />\r\n                { fetchedUser && (fetchedUser.id === 199500866 || fetchedUser.id === 15937415) ?\r\n                    <Div>\r\n                        <Button size=\"l\" mode=\"outline\" stretched onClick={()=>go(\"adminOrders\")}>Управление заказами</Button>\r\n                    </Div> : null\r\n                }\r\n                <Footer />\r\n            </Group>\r\n        </Panel>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport {\n  Header,\n  Placeholder,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  MiniInfoCell,\n  Div,\n  Link,\n  Group,\n  Footer,\n  Snackbar,\n} from \"@vkontakte/vkui\";\nimport Icon24Phone from \"@vkontakte/icons/dist/24/phone\";\nimport Icon24LogoVk from \"@vkontakte/icons/dist/24/logo_vk\";\nimport Icon24Linked from \"@vkontakte/icons/dist/24/linked\";\nimport CartLine from \"../home/components/cart_line\";\nimport mess from \"../../img/mess.png\";\nimport { useCart } from \"../hooks/use_cart\";\n//import { getImg } from \"./Home\";\nimport { useSelector } from \"react-redux\";\nimport ProductsGrid from \"./components/product_grid\";\nimport { ReduxState } from \"../../types\";\nimport \"../style.css\";\n\nexport const getImg = (id: number) => {\n  switch (id) {\n    case 1:\n      return \"https://zoomagasin.ru/images/im-ej-logo.png\";\n    case 19:\n      return \"https://zoomagasin.ru/images/im-possum-logo.png\";\n    case 23:\n      return \"https://zoomagasin.ru/images/im-rept-logo.png\";\n    case 27:\n      return \"https://zoomagasin.ru/images/im-nasek-logo.png\";\n    default:\n      return \"https://zoomagasin.ru/images/im-drug-logo.png\";\n  }\n};\n\ntype CategoryProps = {\n  id: string;\n  go: (panel: string) => void;\n  setActiveProduct: (v: any) => void;\n};\n\nconst Category: React.FC<CategoryProps> = ({ id, go, setActiveProduct }) => {\n  const [snackbar, setSnackbar] = useState<ReactElement | null>(null);\n  const { message, order } = useCart();\n  useEffect(() => {\n    if (!message) return;\n    setSnackbar(\n      <Snackbar layout=\"vertical\" onClose={() => setSnackbar(null)}>\n        {message}\n      </Snackbar>\n    );\n  }, [message]);\n  const targetCat = useSelector((state: ReduxState) => state.targetCategory);\n  if (!targetCat) return null;\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => go(\"home\")} />} />\n      <CartLine go={go} order={order} />\n      <Placeholder\n        icon={\n          <div\n            style={{\n              marginTop: 50,\n              background: \"url(\" + getImg(targetCat.id) + \") no-repeat\",\n              height: 50,\n              width: 50,\n            }}\n          />\n        }\n      >\n        Выбрана категория: {targetCat.name}\n      </Placeholder>\n      <Div>\n        <ProductsGrid setActiveItem={setActiveProduct} go={go} />\n      </Div>\n      <Group header={<Header mode=\"secondary\">Есть вопросы?</Header>}>\n        <MiniInfoCell\n          after={<img width={40} height={22} src={mess} alt=\"Viber/WhatsApp\" />}\n          before={<Icon24Phone height={20} width={20} />}\n        >\n          <Link href=\"tel:+79022954808\" target=\"_blank\">\n            +7 (902) 294-48-08\n          </Link>\n        </MiniInfoCell>\n        <MiniInfoCell before={<Icon24LogoVk height={20} width={20} />}>\n          <Link href=\"https://vk.com/zoomagasin\" target=\"_blank\">\n            vk.com/zoomagasin\n          </Link>\n        </MiniInfoCell>\n        <MiniInfoCell before={<Icon24Linked height={20} width={20} />}>\n          <Link href=\"https://zoomagasin.ru/\" target=\"_blank\">\n            zoomagasin.ru\n          </Link>\n        </MiniInfoCell>\n        <Footer />\n      </Group>\n      {snackbar}\n    </Panel>\n  );\n};\n\nexport default Category;\n","import React from \"react\";\nimport { Avatar, Button, Separator, Banner } from \"@vkontakte/vkui\";\nimport { ProductProps } from \"../../category/components/product_grid\";\nimport {\n  Order,\n  OrderProductElement,\n  OrderProductItem,\n  Product,\n} from \"../../../types\";\n\ntype CartListProductsProps = {\n  order: Order;\n  changeElementVariant: (item: Product, index: number) => void;\n  onIncrementPosition: (item: OrderProductItem) => void;\n  onDecrementPosition: (item: OrderProductItem) => void;\n  onDeletePosition: (item: OrderProductItem) => void;\n};\n\nconst CartListProducts: React.FC<CartListProductsProps> = ({\n  order,\n  changeElementVariant,\n  onIncrementPosition,\n  onDecrementPosition,\n  onDeletePosition,\n}) => {\n  const getPrice = (elements: OrderProductElement[]) => {\n    const e = elements.find((el) => el.active === true);\n    const price = e?.prices?.items?.find((p) => p.quantity_from === null);\n    if (!price) throw Error(\"Ошибка получения цены\");\n    if (price.discount_price) {\n      return {\n        price: price.discount_price,\n        sale: `${price.discount_value_percents}%`,\n      };\n    }\n    return { price: price.price, sale: null };\n  };\n  let arr = [];\n  const getSort = (elements: OrderProductElement[], key: number) => {\n    if (elements.length === 1) return null;\n    return elements.map((item, index) => {\n      return item.properties?.map((p) => {\n        if (!ProductProps[p.property_id] || item.item.available === \"N\" || !p.value) return null;\n        return (\n            <button\n                onClick={() =>\n                    changeElementVariant(order.items[key].item, index)\n                }\n                style={{\n                  color: item.active ? \"#41ca41\" : \"#000\",\n                  float: \"left\",\n                  margin: \"auto\",\n                }}\n            >\n              {p.value}\n            </button>\n        );\n      });\n    });\n  };\n  for (let key in order.items) {\n    const price = getPrice(order.items[key].item.elements);\n    arr.push(\n      <React.Fragment key={key}>\n        <Banner\n          key={key}\n          before={\n            <Avatar\n              size={80}\n              mode=\"image\"\n              src={order.items[key].item.image_url || undefined}\n            />\n          }\n          header={order.items[key].item.name}\n          subheader={`${price.price} руб ${price.sale ? price.sale : \"\"}`}\n          asideMode=\"dismiss\"\n          actions={\n            <>\n              <div style={{ display: \"flex\" }}>\n                {getSort(order.items[key].item.elements, Number(key))}\n              </div>\n              <div style={{ display: \"flex\", bottom: 0 }}>\n                <Button\n                  mode={\"overlay_outline\"}\n                  onClick={() => onDecrementPosition(order.items[key].item)}\n                  size={\"m\"}\n                  style={{ float: \"left\", margin: 5, color: \"#482d06\" }}\n                >\n                  -1\n                </Button>\n                <span\n                  style={{ margin: \"auto\", fontSize: 25, fontWeight: \"bold\" }}\n                >\n                  {order.items[key].count}\n                </span>\n                <Button\n                  mode={\"overlay_outline\"}\n                  onClick={() => onIncrementPosition(order.items[key].item)}\n                  size={\"m\"}\n                  style={{ float: \"left\", margin: 5, color: \"#482d06\" }}\n                >\n                  +1\n                </Button>\n              </div>\n            </>\n          }\n          onDismiss={() => onDeletePosition(order.items[key].item)}\n        />\n        <Separator />\n      </React.Fragment>\n    );\n  }\n  return <div>{arr}</div>;\n};\nexport default CartListProducts;\n","export default __webpack_public_path__ + \"static/media/pay.c8dfba86.png\";","import React, { ReactElement, useMemo, useState, useRef } from \"react\";\nimport {\n  Button,\n  Counter,\n  Div,\n  FormLayout,\n  Input,\n  MiniInfoCell,\n  Snackbar,\n  Spinner,\n} from \"@vkontakte/vkui\";\nimport { useSelector } from \"react-redux\";\nimport { Order, OrderProductElement, ReduxState } from \"../../../types\";\nimport { DeliveryTypes } from \"./delivery\";\nimport { ProductProps } from \"./product_grid\";\nimport payImg from \"../../../img/pay.png\";\n\nconst Pay: React.FC<{\n  typeDelivery: DeliveryTypes;\n  order: Order;\n  clearCart: () => void;\n}> = ({ typeDelivery, order, clearCart }) => {\n  const payRef = useRef(null);\n  const [snackbar, setSnackbar] = useState<ReactElement | null>(null);\n  const [userName, setUserName] = useState(\"\");\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [userPhone, setUserPhone] = useState(\"\");\n  const [payLink, setPayLink] = useState(null);\n  const deliveryInfo = useSelector((state: ReduxState) => state.deliveryInfo);\n  const params = useSelector((state: ReduxState) => state.vkParams);\n  const dPrice = useMemo(() => {\n    if (!deliveryInfo) return 0;\n    if (typeDelivery === DeliveryTypes.SDEK) {\n      return Math.round(Number(deliveryInfo.sdek.price));\n    }\n    return Math.round(deliveryInfo.PR.price);\n  }, [deliveryInfo, typeDelivery]);\n  const dTerm = useMemo(() => {\n    if (!deliveryInfo) return \"\";\n    if (typeDelivery === DeliveryTypes.SDEK) {\n      return `${deliveryInfo.sdek.deliveryPeriodMin} - ${deliveryInfo.sdek.deliveryPeriodMax} дн.`;\n    }\n    return deliveryInfo.PR.deliveryDateMax;\n  }, [deliveryInfo, typeDelivery]);\n  const orderSumWithDelivery = useMemo(() => {\n    return order.meta.sum + dPrice;\n  }, [dPrice, order]);\n  const getElementInfo = (element: OrderProductElement) => {\n    return element?.properties\n      ?.map((p) => {\n        if (ProductProps[p.property_id]) {\n          return `${ProductProps[p.property_id].title} - ${p.value}`;\n        }\n        return \"\";\n      })\n      .join(\"\");\n  };\n  const pay = async (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    e.preventDefault();\n    try {\n      if (userName === \"\") throw Error(\"Не указаны ФИО получателя посылки\");\n      if (userPhone === \"\") throw Error(\"Не указан номер телефона\");\n      if (userAddress === \"\") throw Error(\"Не указан адрес доставки\");\n      let description = \"\";\n      for (let key in order.items) {\n        const e = order.items[key].item.elements.filter(\n          (item) => item.active === true\n        );\n        const aboutItem = getElementInfo(e[0]);\n        description =\n          description +\n          `${order.items[key].item.name}. Штук - ${order.items[key].count}. ${aboutItem}. `;\n      }\n      const date = Date.now();\n      const jsonParams: {\n        order?: { [key: number]: string };\n        info?: {\n          amount: number;\n          count: number;\n          weight: number;\n          typeDelivery: string;\n          activePVZ: string;\n          orderNum: number;\n          date: number;\n        };\n        contacts?: {\n          address: string;\n          phone: string;\n          name: string;\n        };\n      } = {};\n      const or: { [key: number]: string } = {};\n      for (let key in order.items) {\n        const e = order.items[key].item.elements.filter(\n          (item) => item.active === true\n        );\n        const aboutItem = getElementInfo(e[0]);\n        or[\n          key\n        ] = `${order.items[key].item.name}. Штук - ${order.items[key].count}. ${aboutItem}`;\n      }\n      jsonParams.order = or;\n      jsonParams.info = {\n        amount: order.meta.sum,\n        count: order.meta.count,\n        weight: order.meta.weight,\n        typeDelivery:\n          typeDelivery === DeliveryTypes.SDEK ? \"Сдэк\" : \"Почта России\",\n        activePVZ: \"Домой\",\n        orderNum: date,\n        date: date,\n      };\n      jsonParams.contacts = {\n        address: userAddress,\n        phone: userPhone,\n        name: userName,\n      };\n      const data = {\n        merchant: \"57170613-71d8-444e-8b69-8253749eee13\",\n        amount: String(Math.round(orderSumWithDelivery)),\n        custom_order_id: date.toString(),\n        description: description.toString(),\n        unix_timestamp: String(Math.floor(Date.now() / 1000)).toString(),\n        salt: \"dPUTLtbMfcTGzkaBnGtseKlcQymCLrYI\",\n        callback_url:\n          \"https://saharnypossum.herokuapp.com/pay/modulbankcallback/\",\n      };\n      const orders_success = {\n        sum: Math.round(orderSumWithDelivery),\n        user: Number(params.vk_user_id),\n        num: date,\n        jsonParams: jsonParams,\n        params: params,\n      };\n      //saharnypossum.herokuapp.com\n      const response = await fetch(\n        \"https://saharnypossum.herokuapp.com/pay/modulbank\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          cache: \"no-cache\",\n          credentials: \"same-origin\",\n          headers: { \"Content-Type\": \"application/json\" },\n          redirect: \"follow\",\n          referrer: \"no-referrer\",\n          body: JSON.stringify({\n            order: orders_success,\n            payData: data,\n          }),\n        }\n      );\n      const result = await response.json();\n      if (!result) throw Error(\"Ошибка получения информации от банка\");\n      if (result.error) {\n        setSnackbar(\n          <Snackbar onClose={() => setSnackbar(null)}>{result.error}</Snackbar>\n        );\n      }\n      setPayLink(result.paylink);\n    } catch (e) {\n      setSnackbar(\n        <Snackbar layout=\"vertical\" onClose={() => setSnackbar(null)}>\n          {(e as Error).message}\n        </Snackbar>\n      );\n    }\n  };\n  if (!deliveryInfo) return <Spinner />;\n  return (\n    <div>\n      <MiniInfoCell\n        before={null}\n        style={{ paddingTop: 10 }}\n        after={<Counter>{dPrice} руб.</Counter>}\n      >\n        Стоимость доставки\n      </MiniInfoCell>\n      <MiniInfoCell before={null} after={dTerm}>\n        Срок доставки:\n      </MiniInfoCell>\n      <MiniInfoCell before={null} after={orderSumWithDelivery}>\n        Итого к оплате:{\" \"}\n      </MiniInfoCell>\n      <FormLayout>\n        <Input\n          value={userName}\n          onChange={(e) => setUserName(e.target.value)}\n          top={\"Получатель (ФИО)\"}\n        />\n        <Input\n          value={userPhone}\n          onChange={(e) => setUserPhone(e.target.value)}\n          top={\"Телефон\"}\n        />\n        <Input\n          value={userAddress}\n          onChange={(e) => setUserAddress(e.target.value)}\n          top={\"Адресс (Обл., город, улица, дом, кв.)\"}\n        />\n      </FormLayout>\n      <Div>\n        {payLink ? (\n          <a\n            target=\"_blank\"\n            ref={payRef}\n            id=\"payLink\"\n            href={payLink || undefined}\n            onClick={clearCart}\n            rel=\"noreferrer\"\n          >\n            <div\n              style={{\n                textAlign: \"center\",\n                color: \"antiquewhite\",\n                background: \"rgb(0 0 0 / 9%)\",\n                borderRadius: 10,\n              }}\n            >\n              Выберите способ оплаты\n              <img\n                style={{ width: \"100%\" }}\n                src={payImg}\n                alt=\"Перейти к оплате\"\n              />\n            </div>\n          </a>\n        ) : (\n          <Button onClick={pay} mode={\"outline\"} size={\"xl\"}>\n            {`Оплатить ${Math.round(orderSumWithDelivery)} руб.`}\n          </Button>\n        )}\n      </Div>\n      {snackbar}\n    </div>\n  );\n};\nexport default Pay;\n","import React, { useState, useEffect, ReactElement, useMemo } from \"react\";\nimport {\n  Placeholder,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Button,\n  Footer,\n  Cell,\n  Snackbar,\n  Div,\n  MiniInfoCell,\n  Counter,\n  Group,\n  Header,\n} from \"@vkontakte/vkui\";\nimport \"../style.css\";\nimport Icon56ArticleOutline from \"@vkontakte/icons/dist/56/article_outline\";\nimport CartListProductsProps from \"./components/cart_list_products\";\nimport { useCart } from \"../hooks/use_cart\";\nimport { useSelector } from \"react-redux\";\nimport { ReduxState } from \"../../types\";\nimport Delivery from \"../category/components/delivery\";\nimport bridge from \"@vkontakte/vk-bridge\";\n\ntype CartProps = {\n  id: string;\n  go: (panel: string) => void;\n  goBack: () => void;\n};\n\nconst Cart: React.FC<CartProps> = ({ id, go, goBack }) => {\n  const [snackbar, setSnackbar] = useState<ReactElement | null>(null);\n  const [access, setAccess] = useState(true);\n  const deliveryCity = useSelector((state: ReduxState) => state.deliveryCity);\n  const {\n    order,\n    message,\n    changeElementVariant,\n    onIncrementPosition,\n    onDecrementPosition,\n    onDeletePosition,\n    clearCart,\n  } = useCart();\n  const getAccess = async () => {\n    const response = await bridge.send(\"VKWebAppAllowMessagesFromGroup\", {\n      group_id: 34022993,\n      key: \"dBuBKe1kFcdemzB\",\n    });\n    if (!response.result) {\n      setAccess(false);\n    }\n    setAccess(response.result);\n  };\n  useEffect(() => {\n    getAccess();\n  }, []);\n  useEffect(() => {\n    if (!message) return;\n    setSnackbar(\n      <Snackbar layout=\"vertical\" onClose={() => setSnackbar(null)}>\n        {message}\n      </Snackbar>\n    );\n  }, [message]);\n\n  if (order.meta.count === 0) {\n    return (\n      <Panel id={id}>\n        <PanelHeader left={<PanelHeaderBack onClick={goBack} />} />\n        <Cell expandable onClick={() => go(\"userOrders\")}>\n          Оплаченные заказы\n        </Cell>\n        {!access && (\n          <Div>\n            <Button align={\"center\"} onClick={getAccess}>\n              Хочу получать трек-код в сообщении\n            </Button>\n          </Div>\n        )}\n        <Placeholder\n          icon={<Icon56ArticleOutline />}\n          header={\"Ваша корзина пуста\"}\n          action={\n            <Button onClick={goBack} mode={\"outline\"} size=\"l\">\n              Продолжить покупки\n            </Button>\n          }\n        />\n        <Footer />\n      </Panel>\n    );\n  }\n\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => go(\"home\")} />} />\n      <Cell expandable onClick={() => go(\"userOrders\")}>\n        Оплаченные заказы\n      </Cell>\n      {!access && (\n        <Div>\n          <Button align={\"center\"} onClick={getAccess}>\n            Хочу получать трек-код в сообщении\n          </Button>\n        </Div>\n      )}\n      <CartListProductsProps\n        order={order}\n        changeElementVariant={changeElementVariant}\n        onIncrementPosition={onIncrementPosition}\n        onDecrementPosition={onDecrementPosition}\n        onDeletePosition={onDeletePosition}\n      />\n      <>\n        <Div>\n          <MiniInfoCell\n            before={null}\n            after={<Counter>{order.meta ? order.meta.count : 0}</Counter>}\n          >\n            Товаров (штуки)\n          </MiniInfoCell>\n          <MiniInfoCell\n            before={null}\n            after={<Counter>{order.meta ? order.meta.sum : 0}</Counter>}\n          >\n            Сумма (рубли)\n          </MiniInfoCell>\n        </Div>\n        <Group header={<Header mode=\"secondary\">Доставка</Header>}>\n          <Cell\n            expandable\n            onClick={() => go(\"cityList\")}\n            indicator={deliveryCity ? deliveryCity.name : \"Не выбрано\"}\n          >\n            Город доставки\n          </Cell>\n          <Delivery order={order} clearCart={clearCart} />\n        </Group>\n      </>\n      <Footer />\n      {snackbar}\n    </Panel>\n  );\n};\n\nexport default Cart;\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport {\n  Panel,\n  PanelHeader,\n  Card,\n  CardGrid,\n  PanelHeaderBack,\n  Button,\n  MiniInfoCell,\n  Div,\n  Title,\n  Group,\n  Footer,\n  Snackbar,\n} from \"@vkontakte/vkui\";\nimport \"../style.css\";\n\nimport CartLine from \"../home/components/cart_line\";\nimport { useCart } from \"../hooks/use_cart\";\nimport { getElements } from \"../category/components/product_grid\";\nimport { Product } from \"../../types\";\n\ntype AboutProductProps = {\n  id: string;\n  go: (panel: string) => void;\n  activeItem: Product | null;\n};\n\nconst AboutProduct: React.FC<AboutProductProps> = ({ id, go, activeItem }) => {\n  const [snackbar, setSnackbar] = useState<ReactElement | null>(null);\n  const { onIncrementPosition, message, order } = useCart();\n  useEffect(() => {\n    if (!message) return;\n    setSnackbar(\n      <Snackbar layout=\"vertical\" onClose={() => setSnackbar(null)}>\n        {message}\n      </Snackbar>\n    );\n  }, [message]);\n  if (!activeItem) return null;\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => go(\"category\")} />} />\n      <CartLine go={go} order={order} />\n      <Group style={{ paddingTop: 50 }} title=\"Информация о товаре\">\n        {activeItem.image_url && (\n          <img\n            style={{ width: \"100%\" }}\n            src={activeItem.image_url}\n            alt=\"Фото товара\"\n          />\n        )}\n      </Group>\n      <Card>\n        <CardGrid>\n          <Card size=\"l\">\n            <Div style={{\n              backgroundColor: \"#03825e\",\n              borderRadius: 10,\n              color: \"antiquewhite\",\n            }}>\n              <MiniInfoCell textWrap={\"full\"} before={null}>\n                <Title level=\"1\" weight=\"semibold\" style={{ marginBottom: 16 }}>\n                  {activeItem.name}\n                </Title>\n              </MiniInfoCell>\n              {getElements(activeItem.elements)}\n            </Div>\n          </Card>\n          <Card size=\"l\">\n            <Button\n                size=\"xl\"\n                onClick={() => onIncrementPosition(activeItem)}\n                mode=\"commerce\"\n            >\n              Добавить в корзину\n            </Button>\n          </Card>\n          <Card size=\"l\">\n            <Div\n              style={{\n                backgroundColor: \"#03825e\",\n                borderRadius: 10,\n                color: \"antiquewhite\",\n              }}\n            >\n              {activeItem.detail}\n            </Div>\n          </Card>\n        </CardGrid>\n      </Card>\n      <Footer />\n      {snackbar}\n    </Panel>\n  );\n};\n\nexport default AboutProduct;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Cell,\n  Footer,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Input,\n  Spinner,\n  FormLayout,\n} from \"@vkontakte/vkui\";\nimport { useDispatch } from \"react-redux\";\nimport { setDeliveryCity } from \"../../store/actions\";\nimport { City } from \"../../types\";\n\ntype CityListProps = {\n  id: string;\n  goBack: () => void;\n};\n\nconst CityList: React.FC<CityListProps> = ({ id, goBack }) => {\n  const dispatch = useDispatch();\n  const [arrCities, setArrCities] = useState<City[]>([]); //города для доставки\n  const [nameCity, setNameCity] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const setCity = (city: City) => {\n    dispatch(setDeliveryCity(city));\n    goBack();\n  };\n  const find = useCallback(() => {\n    setLoading(true);\n    const url = \"https://sahpossum.herokuapp.com/items/getCities/\" + nameCity;\n    fetch(url)\n      .then((res) => res.json())\n      .then((res) => {\n        setArrCities(res);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      });\n  }, [nameCity]);\n  useEffect(() => {\n    find();\n  }, [find]);\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => goBack()} />} />\n      <FormLayout>\n        <Input\n          top={\"Введите полное название города\"}\n          value={nameCity}\n          onChange={(e) => setNameCity(e.target.value)}\n        />\n      </FormLayout>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <>\n          {arrCities.map((item) => {\n            return (\n              <Cell\n                multiline\n                key={item.id}\n                onClick={() => setCity(item)}\n                description={item.region || \"\"}\n              >\n                {item.name}\n              </Cell>\n            );\n          })}\n        </>\n      )}\n      <Footer />\n    </Panel>\n  );\n};\n\nexport default CityList;\n","import {\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  CardGrid,\n  Card,\n  Div,\n  InfoRow,\n  Input,\n  Select,\n  Button,\n  MiniInfoCell,\n  Group,\n} from \"@vkontakte/vkui\";\nimport React from \"react\";\nimport { UserInfo } from \"@vkontakte/vk-bridge\";\nimport { useGetOrders } from \"./use_get_orders\";\nimport { SuccessOrder } from \"../../types\";\nimport moment from \"moment\";\n\nconst getItem = (order: SuccessOrder[\"jsonParams\"][\"order\"]) => {\n  const jsxArr = [];\n  for (let key in order) {\n    jsxArr.push(\n      <MiniInfoCell before={null} key={key} textWrap=\"full\">\n        {order[key]}\n      </MiniInfoCell>\n    );\n  }\n  return jsxArr;\n};\n\nconst getItemVal = (key: string, value: string) => {\n  switch (key) {\n    case \"activePVZ\":\n      return <InfoRow header=\"Пункт выдачи\">{value}</InfoRow>;\n    case \"amount\":\n      return <InfoRow header=\"Сумма заказа\">{value}</InfoRow>;\n    case \"count\":\n      return <InfoRow header=\"Всего товаров\">{value}</InfoRow>;\n    case \"orderNum\":\n      return <InfoRow header=\"Номер заказа\">{value}</InfoRow>;\n    case \"date\":\n      return (\n        <InfoRow header=\"Дата\">\n          {moment(value).locale(\"ru\").format(\"MMMM Do YYYY, h:mm:ss a\")}\n        </InfoRow>\n      );\n    case \"typeDelivery\":\n      return <InfoRow header=\"Тип доставки\">{value}</InfoRow>;\n    case \"weight\":\n      return <InfoRow header=\"Вес\">{Math.round(Number(value))} кг</InfoRow>;\n    default:\n      return null;\n  }\n};\n\nconst getInfo = (info: SuccessOrder[\"jsonParams\"][\"info\"]) => {\n  const jsxArr = [];\n  for (let key in info) {\n    jsxArr.push(getItemVal(key, info[key]));\n  }\n  return jsxArr;\n};\n\ntype AdminOrdersProps = {\n  go: (panel: string) => void;\n  id: string;\n  fetchedUser: UserInfo | null;\n};\n\nconst AdminOrders: React.FC<AdminOrdersProps> = ({ go, id, fetchedUser }) => {\n  const { arrOrders, changeTrack, changeStatus, changeOrder } = useGetOrders();\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={() => go(\"home\")} />} />\n      <CardGrid style={{ padding: 10 }}>\n        {arrOrders?.map((order) => (\n          <Card\n            style={{\n              paddingTop: 8,\n              borderRadius: 13,\n              margin: \"0 0 20px 0\",\n              backgroundColor: \"#007151\",\n              boxShadow:\n                \"inset 2px 2px 5px rgb(226 191 157 / 50%), 1px 1px 5px rgb(255 255 255)\",\n            }}\n            mode=\"shadow\"\n            size=\"l\"\n          >\n            <Div>\n              {getItem(order.jsonParams.order)}\n              {getInfo(order.jsonParams.info)}\n              <InfoRow header=\"Трек\">\n                <Input\n                  defaultValue={order.track}\n                  onChange={(e) => changeTrack(order, e.target.value)}\n                />\n              </InfoRow>\n              {order.jsonParams.contacts && (\n                <Group title=\"Контакты\">\n                  <InfoRow header=\"Адрес\">\n                    {order.jsonParams.contacts.address}\n                  </InfoRow>\n                  <InfoRow header=\"Имя\">\n                    {order.jsonParams.contacts.name}\n                  </InfoRow>\n                  <InfoRow header=\"Телефон\">\n                    {order.jsonParams.contacts.phone}\n                  </InfoRow>\n                  <InfoRow header=\"Вконтакте\">\n                    <a href={\"https://vk.com/id\" + order.user}>\n                      {\"https://vk.com/id\" + order.user}\n                    </a>\n                  </InfoRow>\n                </Group>\n              )}\n              <Select\n                top=\"Статус\"\n                defaultValue={order.status}\n                onChange={(e) => changeStatus(order, e.target.value)}\n              >\n                <option value={\"Оплачен\"}>Оплачен</option>\n                <option value={\"Отправлен\"}>Отправлен</option>\n                <option value={\"Отменен\"}>Отменен</option>\n              </Select>\n              <Div>\n                <Button\n                  size=\"m\"\n                  stretched\n                  mode=\"outline\"\n                  onClick={() => changeOrder(order)}\n                >\n                  Сохранить (будет отправлено сообщение клиенту о статусе и трек-коде (если указан))\n                </Button>\n              </Div>\n            </Div>\n          </Card>\n        ))}\n      </CardGrid>\n    </Panel>\n  );\n};\nexport default AdminOrders;\n","import { useEffect, useState } from \"react\";\nimport { SuccessOrder } from \"../../types\";\n\ntype UseGetOrdersProps = {\n  arrOrders: SuccessOrder[] | null;\n  changeStatus: (order: SuccessOrder, value: string) => void;\n  changeTrack: (order: SuccessOrder, value: string) => void;\n  changeOrder: (order: SuccessOrder) => void;\n};\n\nconst useGetOrders: () => UseGetOrdersProps = () => {\n  const [arrOrders, setArrOrders] = useState<SuccessOrder[] | null>(null);\n  useEffect(() => {\n    fetch(\"https://saharnypossum.herokuapp.com/pay/orders\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify({}), //\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        setArrOrders(res);\n      });\n  }, []);\n  const changeStatus = async (order: SuccessOrder, value: string) => {\n    const newArr = await arrOrders?.map((item) => {\n      if (item._id === order._id) {\n        const newItem = { ...item };\n        newItem.status = value;\n        return newItem;\n      }\n      return item;\n    });\n    setArrOrders(newArr || []);\n  };\n  const changeTrack = async (order: SuccessOrder, value: string) => {\n    const newArr = await arrOrders?.map((item) => {\n      if (item._id === order._id) {\n        const newItem = { ...item };\n        newItem.track = value;\n        console.log(newItem);\n        return newItem;\n      }\n      return item;\n    });\n    setArrOrders(newArr || []);\n  };\n  const changeOrder = (order: SuccessOrder) => {\n    const item = arrOrders?.find((i) => i._id === order._id);\n    if (!item) return;\n    fetch(\"https://saharnypossum.herokuapp.com/pay/orders\", {\n      method: \"PATCH\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify({\n        _id: item._id,\n        status: item.status,\n        track: item.track,\n        userId: String(item.user),\n        key: \",NbOWn4M_2pKBccO\",\n      }), // body data type must match \"Content-Type\" header\n    })\n      .then((res) => res.json())\n      .then((res) => console.log(res));\n  };\n  return {\n    arrOrders,\n    changeStatus,\n    changeTrack,\n    changeOrder,\n  };\n};\nexport { useGetOrders };\n","import React, { ReactElement, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Cell,\n  Footer,\n  InfoRow,\n  MiniInfoCell,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Placeholder,\n  Snackbar,\n} from \"@vkontakte/vkui\";\nimport {\n  Icon20CheckCircleFillGreen,\n  Icon56ArticleOutline,\n  Icon20CheckCircleFillYellow,\n} from \"@vkontakte/icons\";\nimport { useSelector } from \"react-redux\";\nimport { ReduxState, SuccessOrder } from \"../../types\";\n\ntype UserOrdersProps = {\n  id: string;\n  goBack: () => void;\n};\n\nconst UserOrders: React.FC<UserOrdersProps> = ({ id, goBack }) => {\n  const params = useSelector((state: ReduxState) => state.vkParams);\n  const [snackbar, setSnackbar] = useState<ReactElement | null>(null);\n  const [allOrders, setAllOrders] = useState<SuccessOrder[] | null>(null);\n  useEffect(() => {\n    fetch(\"https://saharnypossum.herokuapp.com/pay/getAllOrders\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: { \"Content-Type\": \"application/json\" },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify({ params: params }),\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.error) {\n          setSnackbar(\n            <Snackbar layout=\"vertical\" onClose={() => setSnackbar(null)}>\n              \"Ошибка получения заказов\"\n            </Snackbar>\n          );\n        } else {\n          setAllOrders(res || []);\n        }\n      });\n  }, [params]);\n  return (\n    <Panel id={id}>\n      <PanelHeader left={<PanelHeaderBack onClick={goBack} />} />\n      <OrderList allOrders={allOrders} goBack={goBack} />\n      <Footer />\n      {snackbar}\n    </Panel>\n  );\n};\nexport default UserOrders;\n\nconst getImg = (status: string) => {\n  switch (status) {\n    case \"Оплачен\":\n      return <Icon20CheckCircleFillGreen />;\n    case \"Отправлен\":\n      return <Icon20CheckCircleFillGreen />;\n    default:\n      return <Icon20CheckCircleFillYellow />;\n  }\n};\nconst getStatus = (status: string) => {\n  switch (status) {\n    case \"В обработке\":\n      return \"Не оплачен\";\n    default:\n      return status;\n  }\n};\n\nconst OrderList: React.FC<{\n  allOrders: SuccessOrder[] | null;\n  goBack: () => void;\n}> = ({ allOrders, goBack }) => {\n  if (!allOrders)\n    return (\n      <Placeholder\n        stretched\n        icon={<Icon56ArticleOutline />}\n        header={\"Загрузка\"}\n      />\n    );\n  if (allOrders.length === 0)\n    return (\n      <Placeholder\n        stretched\n        icon={<Icon56ArticleOutline />}\n        header={\"У вас нет текущих доставок\"}\n        action={\n          <Button onClick={goBack} mode={\"outline\"} size=\"l\">\n            Продолжить покупки\n          </Button>\n        }\n      />\n    );\n  return (\n    <div>\n      {allOrders.map((order, index) => {\n        return (\n          <Cell\n            key={index}\n            multiline\n            description={\n              order.track\n                ? \"Трек-номер: \" + order.track\n                : \"Заказ еще не отправлен\"\n            }\n          >\n            <MiniInfoCell textWrap=\"full\" before={getImg(order.status)}>\n              {`[${getStatus(order.status)}] - ` +\n                `Заказ №${order.num} (${order.sum}руб.)`}\n            </MiniInfoCell>\n            {order.jsonParams.order &&\n              Object.keys(order.jsonParams.order).map((key, index) => {\n                return (\n                  <InfoRow header={order.jsonParams.order[Number(key)]} key={index} />\n                );\n              })}\n          </Cell>\n        );\n      })}\n    </div>\n  );\n};\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport { ConfigProvider, View } from \"@vkontakte/vkui\";\nimport bridge, { UserInfo } from \"@vkontakte/vk-bridge\";\nimport { useDispatch } from \"react-redux\";\nimport {setCategoriesList, setVkParams} from \"./store/actions\";\nimport Home from \"./panels/home\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Category from \"./panels/category\";\nimport Cart from \"./panels/cart/index\"\nimport {Product} from \"./types\";\nimport AboutProduct from \"./panels/about_product\";\nimport CityList from \"./panels/city_list\"\nimport AdminOrders from \"./panels/admin_orders\";\nimport moment from \"moment\";\nimport UserOrders from \"./panels/user_orders\";\n\ntype AppProps = {\n  linkParams: any;\n  params: any;\n};\n\nconst App: React.FC<AppProps> = ({params}) => {\n  moment.locale(\"ru\");\n  const dispatch = useDispatch();\n  const [activePanel, setActivePanel] = useState<string>(\"home\");\n  const [popout, setPopout] = useState(null);\n  const [history, setHistory] = useState<string[]>([\"home\"]);\n  const [fetchedUser, setUser] = useState<UserInfo | null>(null);\n  const [activeProduct, setActiveProduct] = useState<Product | null>(null)\n  useEffect(()=>{\n    dispatch(setVkParams(params))\n  },[dispatch, params])\n  const go = useCallback((panelName: string) => {\n    const hist = [...history];\n    hist.push(panelName);\n    setHistory(hist);\n    setActivePanel(panelName);\n  },[history])\n\n  const goBack = useCallback(() => {\n    const hist = [...history];\n    if (hist.length === 1) {\n      bridge.send(\"VKWebAppClose\", { status: \"success\" });\n    } else {\n      hist.pop();\n      setHistory(hist);\n      setActivePanel(hist[hist.length - 1]);\n    }\n  },[history])\n  useEffect(() => {\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    async function getCat() {\n      const response = await fetch(\n        \"https://zoomagasin.ru/api/api.php?route=sections\"\n      );\n      const res = await response.json();\n      dispatch(setCategoriesList(res.items));\n    }\n    fetchData();\n    getCat();\n    window.onpopstate = () => {\n      goBack();\n    };\n  }, [dispatch, goBack]);\n  return (\n    <ConfigProvider>\n      <View activePanel={activePanel} popout={popout} history={history}>\n        <Home id=\"home\" go={go} fetchedUser={fetchedUser} />\n        <Category id=\"category\" go={go} setActiveProduct={setActiveProduct}/>\n        <AboutProduct id=\"aboutProduct\" go={go} activeItem={activeProduct}/>\n        <Cart id=\"cart\" go={go} goBack={goBack}/>\n        <CityList id=\"cityList\" goBack={goBack}/>\n        <AdminOrders go={go} id=\"adminOrders\" fetchedUser={fetchedUser}/>\n        <UserOrders id=\"userOrders\" goBack={goBack}/>\n      </View>\n    </ConfigProvider>\n  );\n};\n\nexport default App;\n","import {\n  Action,\n  GET_CATEGORIES,\n  SET_CATEGORY,\n  SET_DELIVERY_CITY,\n  SET_DELIVERY_INFO,\n  SET_VK_PARAMS,\n} from \"./actions\";\nimport { ReduxState } from \"../types\";\n\nconst initialState: ReduxState = {\n  categories: null,\n  targetCategory: null,\n  deliveryCity: null,\n  deliveryInfo: null,\n  vkParams: null,\n};\nexport const reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return { ...state, categories: action.payload };\n    case SET_CATEGORY:\n      return { ...state, targetCategory: action.payload };\n    case SET_DELIVERY_CITY:\n      return { ...state, deliveryCity: action.payload };\n    case SET_DELIVERY_INFO:\n      return { ...state, deliveryInfo: action.payload };\n    case SET_VK_PARAMS:\n      return { ...state, vkParams: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { reducer } from \"./store/reducer\";\nconst store = createStore(reducer);\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\nlet linkParams = window.location.hash\n    .replace(\"#\", \"\")\n    .split(\"&\")\n    .reduce(function (p:any, e) {\n        let a = e.split(\"=\");\n        p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n        return p;\n    }, {});\nlet params = window.location.search\n    .replace(\"?\", \"\")\n    .split(\"&\")\n    .reduce(function (p:any, e) {\n        let a = e.split(\"=\");\n        p[decodeURIComponent(a[0])] = decodeURIComponent(a[1]);\n        return p;\n    }, {});\n\nReactDOM.render(\n    <Provider store={store}>\n  <React.StrictMode>\n    <App linkParams={linkParams} params={params}/>\n  </React.StrictMode>\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}